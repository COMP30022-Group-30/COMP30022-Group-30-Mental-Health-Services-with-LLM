# Generated by Django 5.2.6 on 2025-09-23 07:54

import django.db.models.deletion
from django.db import migrations, models


class Migration(migrations.Migration):

    initial = True

    dependencies = [
    ]

    operations = [
        migrations.CreateModel(
            name='organisation',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('organisation_name', models.CharField(max_length=100)),
            ],
        ),
        migrations.CreateModel(
            name='region',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('region_name', models.CharField(max_length=100)),
            ],
        ),
        migrations.CreateModel(
            name='campus',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('campus_name', models.CharField(max_length=100)),
                ('organisation_key', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='services.organisation')),
            ],
        ),
        migrations.CreateModel(
            name='postcode',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('postcode', models.CharField(max_length=10)),
                ('region_key', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='services.region')),
            ],
        ),
        migrations.CreateModel(
            name='service',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('service_name', models.CharField(max_length=100)),
                ('organisation_key', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='services.organisation')),
            ],
        ),
        migrations.CreateModel(
            name='service_campus',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('email', models.EmailField(blank=True, max_length=50, null=True)),
                ('phone', models.CharField(blank=True, max_length=15, null=True)),
                ('website', models.URLField(blank=True, max_length=100, null=True)),
                ('notes', models.TextField(blank=True, null=True)),
                ('expectesd_wait_time', models.CharField(blank=True, max_length=20, null=True)),
                ('op_hours_24_7', models.BooleanField(blank=True, default=False, null=True)),
                ('op_hours_standard', models.BooleanField(blank=True, default=False, null=True)),
                ('op_hours_extended', models.BooleanField(blank=True, default=False, null=True)),
                ('op_hours_extended_details', models.TextField(blank=True, null=True)),
                ('address', models.CharField(blank=True, max_length=200, null=True)),
                ('suburb', models.CharField(blank=True, max_length=100, null=True)),
                ('state', models.CharField(blank=True, max_length=100, null=True)),
                ('postcode', models.CharField(blank=True, max_length=10, null=True)),
                ('eligibility_and_discription', models.TextField(blank=True, null=True)),
                ('campus_key', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='services.campus')),
                ('service_key', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='services.service')),
            ],
        ),
        migrations.CreateModel(
            name='referral_pathway',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('referral_pathway', models.TextField(choices=[('Doctor/GP referral', 'Doctor/GP referral'), ('Free call', 'Free call'), ('General booking', 'General booking'), ('Varies depending on service', 'Varies depending on service')])),
                ('service_campus_key', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='services.service_campus')),
            ],
        ),
        migrations.CreateModel(
            name='level_of_care',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('level_of_care_num', models.IntegerField(blank=True, choices=[(1, '1'), (2, '2'), (3, '3'), (4, '4'), (5, '5')], null=True)),
                ('level_of_care', models.CharField(blank=True, choices=[('Self management', 'Self management'), ('Low intensity', 'Low intensity'), ('Moderate intensity', 'Moderate intensity'), ('High intensity', 'High intensity'), ('Specialist', 'Specialist')], null=True)),
                ('service_campus_key', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='services.service_campus')),
            ],
        ),
        migrations.CreateModel(
            name='delivery_method',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('delivery_method', models.CharField(choices=[('In person', 'In person'), ('Online', 'Online'), ('Outreach', 'Outreach')])),
                ('service_campus_key', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='services.service_campus')),
            ],
        ),
        migrations.CreateModel(
            name='cost',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('cost', models.CharField(choices=[('Free', 'Free'), ('N/A', 'N/A'), ('Paid', 'Paid')])),
                ('service_campus_key', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='services.service_campus')),
            ],
        ),
        migrations.CreateModel(
            name='service_region',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('region_key', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, to='services.region')),
                ('service_campus_key', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, to='services.service_campus')),
            ],
        ),
        migrations.CreateModel(
            name='service_type',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('service_type_num', models.IntegerField(blank=True, choices=[(1, '1'), (2, '2'), (3, '3'), (4, '4'), (5, '5'), (6, '6')], null=True)),
                ('service_type', models.CharField(blank=True, choices=[('Mental Health promotion', 'Mental Health promotion'), ('Mental Illness prevention', 'Mental Illness prevention'), ('Primary and Specialised clinical ambulatory mental health care services', 'Primary and Specialised clinical ambulatory mental health care services'), ('Specialised mental health community support services', 'Specialised mental health community support services'), ('Specialised bed-based mental health care services', 'Specialised bed-based mental health care services'), ('Medication and prodeures', 'Medication and procedures')], max_length=100, null=True)),
                ('service_campus_key', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='services.service_campus')),
            ],
        ),
        migrations.CreateModel(
            name='target_population',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('target_population', models.CharField(choices=[('AOD', 'AOD'), ('Aboriginal and Torres Strait Islander', 'Aboriginal and Torres Strait Islander'), ('Adult', 'Adult'), ('Children', 'Children'), ('Culturally and Linguistically Diverse', 'Culturally and Linguistically Diverse'), ('Families', 'Families'), ('Homeless', 'Homeless'), ('Hospital', 'Hospital'), ('LGBTQIA+', 'LGBTQIA+'), ('Older Adults', 'Older Adults'), ('Specialised Services', 'Specialised Services'), ('Young People', 'Young People')])),
                ('service_campus_key', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='services.service_campus')),
            ],
        ),
        migrations.CreateModel(
            name='workforce_type',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('workforce_type', models.CharField(choices=[('Medical', 'Medical'), ('Peer worker', 'Peer worker'), ('Tertiary qualified', 'Tertiary qualified'), ('Vocationally qualified', 'Vocationally qualified')])),
                ('service_campus_key', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='services.service_campus')),
            ],
        ),
    ]
