name: Lint
on:
  push:
    branches: [ develop ]

permissions:
  contents: read

concurrency:
  group: lint-${{ github.ref }}
  cancel-in-progress: true

jobs:
  eslint:
    name: ESLint (auto-detect packages)
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4

      - id: detect_js
        name: Detect JS/TS
        shell: bash
        run: |
          if git ls-files '**/package.json' | grep -q .; then
            echo "found=true" >> "$GITHUB_OUTPUT"
          else
            echo "found=false" >> "$GITHUB_OUTPUT"
          fi

      - if: steps.detect_js.outputs.found == 'true'
        name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: '20'
          cache: 'npm'
          cache-dependency-path: |
            **/package-lock.json
            **/npm-shrinkwrap.json

      - if: steps.detect_js.outputs.found == 'true'
        name: Lint all JS/TS packages that define "lint" script
        shell: bash
        run: |
          set -euo pipefail
          mapfile -t PKGS < <(git ls-files '**/package.json' | xargs -n1 dirname | sort -u)
          for DIR in "${PKGS[@]}"; do
            PJ="$DIR/package.json"
            if grep -qE '"lint"\s*:' "$PJ"; then
              echo "— Linting $DIR"
              pushd "$DIR" >/dev/null
              if [[ -f package-lock.json || -f npm-shrinkwrap.json ]]; then npm ci; else npm i --no-audit --no-fund; fi
              npm run lint
              popd >/dev/null
            else
              echo "— Skipping $DIR (no \"lint\" script)."
            fi
          done

  python-lint:
    name: Python Lint (ruff + black --check)
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4

      - id: detect_py
        name: Detect Python
        shell: bash
        run: |
          if git ls-files '**/*.py' | grep -q .; then
            echo "found=true" >> "$GITHUB_OUTPUT"
          else
            echo "found=false" >> "$GITHUB_OUTPUT"
          fi

      - if: steps.detect_py.outputs.found == 'true'
        name: Setup Python
        uses: actions/setup-python@v5
        with:
          python-version: '3.12'
          cache: 'pip'
          cache-dependency-path: |
            requirements*.txt
            **/requirements*.txt
            pyproject.toml
            **/pyproject.toml

      - if: steps.detect_py.outputs.found == 'true'
        name: Install linters
        run: |
          python -m pip install --upgrade pip
          pip install ruff black

      - if: steps.detect_py.outputs.found == 'true'
        name: Ruff + Black checks
        run: |
          ruff check .
          ruff format --check .
          black --check .
